# Generated by Django 4.2.20 on 2025-10-30 10:27

import core.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Adjunto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('modificado', models.DateTimeField(auto_now=True)),
                ('object_id', models.UUIDField()),
                ('archivo', models.FileField(upload_to='adjuntos/')),
                ('etiqueta', models.CharField(blank=True, max_length=120)),
            ],
            options={
                'verbose_name': 'Adjunto',
                'verbose_name_plural': 'Adjuntos',
                'ordering': ['-creado'],
            },
        ),
        migrations.CreateModel(
            name='AlertaCiudadano',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('modificado', models.DateTimeField(auto_now=True)),
                ('tipo', models.CharField(choices=[('RIESGO_ALTO', 'Riesgo Alto'), ('RIESGO_SUICIDA', 'Riesgo Suicida'), ('VIOLENCIA', 'Situación de Violencia'), ('SIN_CONTACTO', 'Sin Contacto Prolongado'), ('SIN_EVALUACION', 'Sin Evaluación Inicial'), ('SIN_PLAN', 'Sin Plan de Intervención'), ('EVENTO_CRITICO', 'Evento Crítico Reciente'), ('DERIVACION_PENDIENTE', 'Derivación Pendiente'), ('SIN_RED_FAMILIAR', 'Sin Red Familiar'), ('SIN_CONSENTIMIENTO', 'Sin Consentimiento'), ('CONTACTOS_FALLIDOS', 'Contactos Fallidos'), ('PLAN_VENCIDO', 'Plan Vencido')], max_length=30)),
                ('prioridad', models.CharField(choices=[('CRITICA', 'Crítica'), ('ALTA', 'Alta'), ('MEDIA', 'Media'), ('BAJA', 'Baja')], max_length=10)),
                ('mensaje', models.CharField(max_length=200)),
                ('activa', models.BooleanField(default=True)),
                ('fecha_cierre', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Alerta de Ciudadano',
                'verbose_name_plural': 'Alertas de Ciudadanos',
                'ordering': ['-creado'],
            },
        ),
        migrations.CreateModel(
            name='AlertaEventoCritico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('modificado', models.DateTimeField(auto_now=True)),
                ('fecha_cierre', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Alerta Evento Crítico',
                'verbose_name_plural': 'Alertas Eventos Críticos',
            },
        ),
        migrations.CreateModel(
            name='Ciudadano',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('modificado', models.DateTimeField(auto_now=True)),
                ('dni', models.CharField(db_index=True, max_length=20, unique=True)),
                ('nombre', models.CharField(max_length=120)),
                ('apellido', models.CharField(db_index=True, max_length=120)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('genero', models.CharField(blank=True, choices=[('M', 'Masculino'), ('F', 'Femenino'), ('X', 'No binario')], max_length=1)),
                ('telefono', models.CharField(blank=True, max_length=40)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('domicilio', models.CharField(blank=True, max_length=240)),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Ciudadano',
                'verbose_name_plural': 'Ciudadanos',
            },
        ),
        migrations.CreateModel(
            name='LegajoAtencion',
            fields=[
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('modificado', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('codigo', models.CharField(default=core.models.generate_codigo, max_length=36, unique=True)),
                ('estado', models.CharField(choices=[('ABIERTO', 'Abierto'), ('EN_SEGUIMIENTO', 'En seguimiento'), ('DERIVADO', 'Derivado'), ('CERRADO', 'Cerrado')], default='ABIERTO', max_length=20)),
                ('fecha_apertura', models.DateField(auto_now_add=True)),
                ('fecha_cierre', models.DateField(blank=True, null=True)),
                ('confidencialidad', models.CharField(choices=[('NORMAL', 'Normal'), ('RESTRINGIDA', 'Restringida')], default='NORMAL', max_length=20)),
                ('notas', models.TextField(blank=True)),
                ('via_ingreso', models.CharField(choices=[('ESPONTANEA', 'Consulta espontánea'), ('DERIVACION', 'Derivación'), ('JUDICIAL', 'Judicial'), ('HOSPITAL', 'Hospital/Guardia')], default='ESPONTANEA', max_length=20)),
                ('fecha_admision', models.DateField(auto_now_add=True)),
                ('plan_vigente', models.BooleanField(default=False)),
                ('nivel_riesgo', models.CharField(choices=[('BAJO', 'Bajo'), ('MEDIO', 'Medio'), ('ALTO', 'Alto')], default='BAJO', max_length=20)),
                ('ciudadano', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='legajos', to='legajos.ciudadano')),
                ('dispositivo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='legajos', to='core.institucion', verbose_name='Institución')),
                ('responsable', models.ForeignKey(blank=True, help_text='Usuario con rol de Responsable asignado al legajo', limit_choices_to={'groups__name': 'Responsable'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='legajos_atencion_responsable', to=settings.AUTH_USER_MODEL, verbose_name='Responsable')),
            ],
            options={
                'verbose_name': 'Legajo de Atención',
                'verbose_name_plural': 'Legajos de Atención',
            },
        ),
        migrations.CreateModel(
            name='Profesional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('modificado', models.DateTimeField(auto_now=True)),
                ('matricula', models.CharField(blank=True, max_length=60)),
                ('rol', models.CharField(blank=True, max_length=80)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profesional',
                'verbose_name_plural': 'Profesionales',
            },
        ),
        migrations.CreateModel(
            name='VinculoFamiliar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('modificado', models.DateTimeField(auto_now=True)),
                ('tipo_vinculo', models.CharField(choices=[('PADRE', 'Padre'), ('MADRE', 'Madre'), ('HIJO', 'Hijo/a'), ('HERMANO', 'Hermano/a'), ('ABUELO', 'Abuelo/a'), ('TIO', 'Tío/a'), ('PRIMO', 'Primo/a'), ('PAREJA', 'Pareja'), ('EXPAREJA', 'Ex pareja'), ('CUÑADO', 'Cuñado/a'), ('YERNO', 'Yerno/Nuera'), ('SUEGRO', 'Suegro/a'), ('AMIGO', 'Amigo/a'), ('VECINO', 'Vecino/a'), ('REFERENTE', 'Referente comunitario'), ('TUTOR', 'Tutor legal'), ('OTRO', 'Otro')], max_length=20)),
                ('es_contacto_emergencia', models.BooleanField(default=False, help_text='Disponible para emergencias 24hs')),
                ('es_referente_tratamiento', models.BooleanField(default=False, help_text='Participa activamente en el tratamiento')),
                ('convive', models.BooleanField(default=False, help_text='Vive en el mismo domicilio')),
                ('telefono_alternativo', models.CharField(blank=True, help_text='Teléfono adicional para este vínculo', max_length=40)),
                ('observaciones', models.TextField(blank=True, help_text='Observaciones sobre la relación')),
                ('activo', models.BooleanField(default=True, help_text='Vínculo activo')),
                ('ciudadano_principal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vinculos_como_principal', to='legajos.ciudadano')),
                ('ciudadano_vinculado', models.ForeignKey(help_text='Debe ser otro ciudadano registrado en el sistema', on_delete=django.db.models.deletion.CASCADE, related_name='vinculos_como_vinculado', to='legajos.ciudadano')),
            ],
            options={
                'verbose_name': 'Vínculo Familiar',
                'verbose_name_plural': 'Vínculos Familiares',
            },
        ),
        migrations.CreateModel(
            name='SeguimientoContacto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('modificado', models.DateTimeField(auto_now=True)),
                ('tipo', models.CharField(choices=[('ENTREVISTA', 'Entrevista'), ('VISITA', 'Visita'), ('LLAMADA', 'Llamada'), ('TALLER', 'Taller')], max_length=40)),
                ('descripcion', models.TextField()),
                ('adherencia', models.CharField(blank=True, choices=[('ADECUADA', 'Adecuada'), ('PARCIAL', 'Parcial'), ('NULA', 'Nula')], max_length=20)),
                ('adjuntos', models.FileField(blank=True, null=True, upload_to='seguimientos/')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seguimientos', to='legajos.legajoatencion')),
                ('profesional', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='legajos.profesional')),
            ],
            options={
                'verbose_name': 'Seguimiento',
                'verbose_name_plural': 'Seguimientos',
                'ordering': ['-creado'],
            },
        ),
        migrations.CreateModel(
            name='ProfesionalTratante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('modificado', models.DateTimeField(auto_now=True)),
                ('rol', models.CharField(choices=[('PSICOLOGO', 'Psicólogo/a'), ('PSIQUIATRA', 'Psiquiatra'), ('MEDICO', 'Médico/a'), ('TS', 'Trabajador/a Social'), ('OPERADOR', 'Operador/a Socioterapéutico'), ('COORDINADOR', 'Coordinador/a'), ('DIRECTOR', 'Director/a'), ('ENFERMERO', 'Enfermero/a'), ('TERAPISTA', 'Terapista Ocupacional'), ('ABOGADO', 'Abogado/a'), ('OTRO', 'Otro')], max_length=20)),
                ('es_responsable_principal', models.BooleanField(default=False, help_text='Responsable principal del caso')),
                ('fecha_asignacion', models.DateField(auto_now_add=True)),
                ('fecha_desasignacion', models.DateField(blank=True, help_text='Fecha cuando dejó de atender el caso', null=True)),
                ('activo', models.BooleanField(default=True)),
                ('observaciones', models.TextField(blank=True, help_text='Observaciones sobre su participación')),
                ('dispositivo', models.ForeignKey(help_text='Dispositivo donde trabaja', on_delete=django.db.models.deletion.PROTECT, to='core.institucion')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profesionales_tratantes', to='legajos.legajoatencion')),
                ('usuario', models.ForeignKey(help_text='Usuario del sistema', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profesional Tratante',
                'verbose_name_plural': 'Profesionales Tratantes',
            },
        ),
        migrations.CreateModel(
            name='PlanIntervencion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('modificado', models.DateTimeField(auto_now=True)),
                ('vigente', models.BooleanField(default=True)),
                ('actividades', models.JSONField(blank=True, help_text='Lista de actividades: [{"accion":"Entrevista","freq":"semanal","responsable":"operador"}]', null=True)),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='planes', to='legajos.legajoatencion')),
                ('profesional', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='legajos.profesional')),
            ],
            options={
                'verbose_name': 'Plan de Intervención',
                'verbose_name_plural': 'Planes de Intervención',
            },
        ),
        migrations.CreateModel(
            name='Objetivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=240)),
                ('indicador_exito', models.CharField(blank=True, max_length=240)),
                ('cumplido', models.BooleanField(default=False)),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='objetivos', to='legajos.legajoatencion')),
            ],
            options={
                'verbose_name': 'Objetivo',
                'verbose_name_plural': 'Objetivos',
            },
        ),
        migrations.CreateModel(
            name='HistorialContacto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('modificado', models.DateTimeField(auto_now=True)),
                ('tipo_contacto', models.CharField(choices=[('LLAMADA', 'Llamada Telefónica'), ('EMAIL', 'Email'), ('VISITA_DOM', 'Visita Domiciliaria'), ('REUNION', 'Reunión Presencial'), ('VIDEO', 'Videollamada'), ('MENSAJE', 'Mensaje/WhatsApp')], max_length=20)),
                ('fecha_contacto', models.DateTimeField()),
                ('duracion_minutos', models.PositiveIntegerField(blank=True, help_text='Duración en minutos (para llamadas/reuniones)', null=True)),
                ('estado', models.CharField(choices=[('EXITOSO', 'Exitoso'), ('NO_CONTESTA', 'No contesta'), ('OCUPADO', 'Ocupado'), ('CANCELADO', 'Cancelado'), ('REPROGRAMADO', 'Reprogramado')], default='EXITOSO', max_length=20)),
                ('motivo', models.CharField(help_text='Motivo del contacto', max_length=200)),
                ('resumen', models.TextField(help_text='Resumen de la conversación/encuentro')),
                ('acuerdos', models.TextField(blank=True, help_text='Acuerdos alcanzados')),
                ('proximos_pasos', models.TextField(blank=True, help_text='Próximos pasos acordados')),
                ('participantes', models.TextField(blank=True, help_text='Otras personas presentes (para reuniones/visitas)')),
                ('ubicacion', models.CharField(blank=True, help_text='Ubicación del encuentro', max_length=200)),
                ('archivo_adjunto', models.FileField(blank=True, help_text='Grabación, foto, documento relacionado', null=True, upload_to='contactos/')),
                ('seguimiento_requerido', models.BooleanField(default=False, help_text='Requiere seguimiento posterior')),
                ('fecha_proximo_contacto', models.DateField(blank=True, help_text='Fecha sugerida para próximo contacto', null=True)),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historial_contactos', to='legajos.legajoatencion')),
                ('profesional', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contactos_realizados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Historial de Contacto',
                'verbose_name_plural': 'Historial de Contactos',
                'ordering': ['-fecha_contacto'],
            },
        ),
        migrations.CreateModel(
            name='EventoCritico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('modificado', models.DateTimeField(auto_now=True)),
                ('tipo', models.CharField(choices=[('SOBREDOSIS', 'Sobredosis'), ('CRISIS', 'Crisis aguda'), ('VIOLENCIA', 'Violencia'), ('INTERNACION', 'Internación')], max_length=40)),
                ('detalle', models.TextField()),
                ('notificado_a', models.JSONField(blank=True, help_text='Lista de familiares/autoridades notificadas', null=True)),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eventos', to='legajos.legajoatencion')),
            ],
            options={
                'verbose_name': 'Evento Crítico',
                'verbose_name_plural': 'Eventos Críticos',
                'ordering': ['-creado'],
            },
        ),
        migrations.CreateModel(
            name='EvaluacionInicial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('modificado', models.DateTimeField(auto_now=True)),
                ('situacion_consumo', models.TextField(blank=True, help_text='Descripción de la situación actual de consumo', verbose_name='Situación de Consumo')),
                ('antecedentes', models.TextField(blank=True, help_text='Antecedentes médicos, psiquiátricos y de consumo', verbose_name='Antecedentes')),
                ('red_apoyo', models.TextField(blank=True, help_text='Descripción de la red de apoyo familiar y social', verbose_name='Red de Apoyo')),
                ('condicion_social', models.TextField(blank=True, help_text='Situación socioeconómica, vivienda, trabajo, educación', verbose_name='Condición Social')),
                ('tamizajes', models.JSONField(blank=True, help_text='Resultados de tamizajes aplicados (ej: ASSIST, PHQ-9)', null=True, verbose_name='Tamizajes')),
                ('riesgo_suicida', models.BooleanField(default=False, help_text='Indica si presenta riesgo suicida', verbose_name='Riesgo Suicida')),
                ('violencia', models.BooleanField(default=False, help_text='Indica si presenta situación de violencia', verbose_name='Situación de Violencia')),
                ('legajo', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='evaluacion', to='legajos.legajoatencion')),
            ],
            options={
                'verbose_name': 'Evaluación Inicial',
                'verbose_name_plural': 'Evaluaciones Iniciales',
            },
        ),
        migrations.CreateModel(
            name='DispositivoVinculado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('modificado', models.DateTimeField(auto_now=True)),
                ('fecha_admision', models.DateField()),
                ('fecha_egreso', models.DateField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('ACTIVO', 'Activo'), ('EGRESADO', 'Egresado'), ('DERIVADO', 'Derivado'), ('ABANDONO', 'Abandono'), ('SUSPENDIDO', 'Suspendido')], default='ACTIVO', max_length=20)),
                ('observaciones', models.TextField(blank=True, help_text='Observaciones sobre la admisión')),
                ('dispositivo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.institucion')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dispositivos_vinculados', to='legajos.legajoatencion')),
                ('referente_dispositivo', models.ForeignKey(blank=True, help_text='Referente en el dispositivo', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Dispositivo Vinculado',
                'verbose_name_plural': 'Dispositivos Vinculados',
            },
        ),
        migrations.CreateModel(
            name='Derivacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('modificado', models.DateTimeField(auto_now=True)),
                ('motivo', models.TextField()),
                ('urgencia', models.CharField(choices=[('BAJA', 'Baja'), ('MEDIA', 'Media'), ('ALTA', 'Alta')], default='MEDIA', max_length=20)),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('ACEPTADA', 'Aceptada'), ('RECHAZADA', 'Rechazada')], default='PENDIENTE', max_length=20)),
                ('respuesta', models.CharField(blank=True, max_length=120)),
                ('fecha_aceptacion', models.DateField(blank=True, null=True)),
                ('destino', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='derivaciones_destino', to='core.institucion', verbose_name='Institución Destino')),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='derivaciones', to='legajos.legajoatencion')),
                ('origen', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='derivaciones_origen', to='core.institucion', verbose_name='Institución Origen')),
            ],
            options={
                'verbose_name': 'Derivación',
                'verbose_name_plural': 'Derivaciones',
                'ordering': ['-creado'],
            },
        ),
        migrations.CreateModel(
            name='ContactoEmergencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('modificado', models.DateTimeField(auto_now=True)),
                ('nombre', models.CharField(max_length=120)),
                ('relacion', models.CharField(help_text='Relación con el ciudadano', max_length=100)),
                ('telefono_principal', models.CharField(max_length=40)),
                ('telefono_alternativo', models.CharField(blank=True, max_length=40)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('disponibilidad_24hs', models.BooleanField(default=True, help_text='Disponible las 24 horas')),
                ('prioridad', models.PositiveSmallIntegerField(default=1, help_text='Orden de prioridad (1=mayor prioridad)')),
                ('instrucciones_especiales', models.TextField(blank=True, help_text='Instrucciones especiales para contactar')),
                ('activo', models.BooleanField(default=True)),
                ('legajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contactos_emergencia', to='legajos.legajoatencion')),
            ],
            options={
                'verbose_name': 'Contacto de Emergencia',
                'verbose_name_plural': 'Contactos de Emergencia',
                'ordering': ['prioridad', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='Consentimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('modificado', models.DateTimeField(auto_now=True)),
                ('texto', models.TextField()),
                ('firmado_por', models.CharField(max_length=160)),
                ('fecha_firma', models.DateField()),
                ('archivo', models.FileField(blank=True, null=True, upload_to='consentimientos/')),
                ('vigente', models.BooleanField(default=True)),
                ('ciudadano', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='legajos.ciudadano')),
            ],
            options={
                'verbose_name': 'Consentimiento',
                'verbose_name_plural': 'Consentimientos',
            },
        ),
        migrations.AddIndex(
            model_name='ciudadano',
            index=models.Index(fields=['dni'], name='legajos_ciu_dni_4e1a21_idx'),
        ),
        migrations.AddIndex(
            model_name='ciudadano',
            index=models.Index(fields=['apellido', 'nombre'], name='legajos_ciu_apellid_2efcc7_idx'),
        ),
        migrations.AddField(
            model_name='alertaeventocritico',
            name='evento',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alertas_vistas', to='legajos.eventocritico'),
        ),
        migrations.AddField(
            model_name='alertaeventocritico',
            name='responsable',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alertas_eventos_vistas', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='alertaciudadano',
            name='cerrada_por',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alertas_cerradas', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='alertaciudadano',
            name='ciudadano',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alertas', to='legajos.ciudadano'),
        ),
        migrations.AddField(
            model_name='alertaciudadano',
            name='legajo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alertas', to='legajos.legajoatencion'),
        ),
        migrations.AddField(
            model_name='adjunto',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddIndex(
            model_name='vinculofamiliar',
            index=models.Index(fields=['ciudadano_principal', 'activo'], name='legajos_vin_ciudada_12442d_idx'),
        ),
        migrations.AddIndex(
            model_name='vinculofamiliar',
            index=models.Index(fields=['es_contacto_emergencia'], name='legajos_vin_es_cont_ea3d52_idx'),
        ),
        migrations.AddIndex(
            model_name='vinculofamiliar',
            index=models.Index(fields=['es_referente_tratamiento'], name='legajos_vin_es_refe_228ff2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='vinculofamiliar',
            unique_together={('ciudadano_principal', 'ciudadano_vinculado', 'tipo_vinculo')},
        ),
        migrations.AddIndex(
            model_name='seguimientocontacto',
            index=models.Index(fields=['legajo', '-creado'], name='legajos_seg_legajo__102aed_idx'),
        ),
        migrations.AddIndex(
            model_name='seguimientocontacto',
            index=models.Index(fields=['tipo'], name='legajos_seg_tipo_878489_idx'),
        ),
        migrations.AddIndex(
            model_name='profesionaltratante',
            index=models.Index(fields=['legajo', 'activo'], name='legajos_pro_legajo__fd356e_idx'),
        ),
        migrations.AddIndex(
            model_name='profesionaltratante',
            index=models.Index(fields=['usuario', 'activo'], name='legajos_pro_usuario_220169_idx'),
        ),
        migrations.AddIndex(
            model_name='profesionaltratante',
            index=models.Index(fields=['es_responsable_principal'], name='legajos_pro_es_resp_2ed784_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='profesionaltratante',
            unique_together={('legajo', 'usuario', 'rol')},
        ),
        migrations.AddIndex(
            model_name='planintervencion',
            index=models.Index(fields=['legajo', 'vigente'], name='legajos_pla_legajo__774a07_idx'),
        ),
        migrations.AddIndex(
            model_name='legajoatencion',
            index=models.Index(fields=['ciudadano', 'dispositivo'], name='legajos_leg_ciudada_ecfe11_idx'),
        ),
        migrations.AddIndex(
            model_name='legajoatencion',
            index=models.Index(fields=['estado'], name='legajos_leg_estado_38174b_idx'),
        ),
        migrations.AddIndex(
            model_name='legajoatencion',
            index=models.Index(fields=['nivel_riesgo', 'fecha_admision'], name='legajos_leg_nivel_r_bb2a9c_idx'),
        ),
        migrations.AddIndex(
            model_name='historialcontacto',
            index=models.Index(fields=['legajo', '-fecha_contacto'], name='legajos_his_legajo__775928_idx'),
        ),
        migrations.AddIndex(
            model_name='historialcontacto',
            index=models.Index(fields=['tipo_contacto', 'estado'], name='legajos_his_tipo_co_3a29d8_idx'),
        ),
        migrations.AddIndex(
            model_name='historialcontacto',
            index=models.Index(fields=['profesional', '-fecha_contacto'], name='legajos_his_profesi_d278ba_idx'),
        ),
        migrations.AddIndex(
            model_name='historialcontacto',
            index=models.Index(fields=['seguimiento_requerido'], name='legajos_his_seguimi_0fe9a4_idx'),
        ),
        migrations.AddIndex(
            model_name='eventocritico',
            index=models.Index(fields=['legajo', 'tipo'], name='legajos_eve_legajo__746e22_idx'),
        ),
        migrations.AddIndex(
            model_name='eventocritico',
            index=models.Index(fields=['-creado'], name='legajos_eve_creado_f8d037_idx'),
        ),
        migrations.AddIndex(
            model_name='evaluacioninicial',
            index=models.Index(fields=['riesgo_suicida'], name='legajos_eva_riesgo__96eaaf_idx'),
        ),
        migrations.AddIndex(
            model_name='evaluacioninicial',
            index=models.Index(fields=['violencia'], name='legajos_eva_violenc_4ca778_idx'),
        ),
        migrations.AddIndex(
            model_name='dispositivovinculado',
            index=models.Index(fields=['legajo', 'estado'], name='legajos_dis_legajo__2d6cdb_idx'),
        ),
        migrations.AddIndex(
            model_name='dispositivovinculado',
            index=models.Index(fields=['dispositivo', 'estado'], name='legajos_dis_disposi_d191fc_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='dispositivovinculado',
            unique_together={('legajo', 'dispositivo', 'fecha_admision')},
        ),
        migrations.AddIndex(
            model_name='derivacion',
            index=models.Index(fields=['legajo', 'estado'], name='legajos_der_legajo__77c550_idx'),
        ),
        migrations.AddIndex(
            model_name='derivacion',
            index=models.Index(fields=['urgencia'], name='legajos_der_urgenci_7d080c_idx'),
        ),
        migrations.AddIndex(
            model_name='contactoemergencia',
            index=models.Index(fields=['legajo', 'activo', 'prioridad'], name='legajos_con_legajo__c0e60f_idx'),
        ),
        migrations.AddIndex(
            model_name='alertaeventocritico',
            index=models.Index(fields=['responsable', 'fecha_cierre'], name='legajos_ale_respons_7e2a8a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='alertaeventocritico',
            unique_together={('evento', 'responsable')},
        ),
        migrations.AddIndex(
            model_name='alertaciudadano',
            index=models.Index(fields=['ciudadano', 'activa'], name='legajos_ale_ciudada_b8fddb_idx'),
        ),
        migrations.AddIndex(
            model_name='alertaciudadano',
            index=models.Index(fields=['tipo', 'prioridad'], name='legajos_ale_tipo_3f099f_idx'),
        ),
        migrations.AddIndex(
            model_name='alertaciudadano',
            index=models.Index(fields=['legajo', 'activa'], name='legajos_ale_legajo__34c7e6_idx'),
        ),
        migrations.AddIndex(
            model_name='adjunto',
            index=models.Index(fields=['content_type', 'object_id'], name='legajos_adj_content_fdffd8_idx'),
        ),
    ]
